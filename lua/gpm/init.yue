include = include
SERVER = SERVER

unless istable( gpm )
    global gpm = { VERSION: "2.0.0" }

gpm = gpm
gpm.StartTime = SysTime!

do

    local username
    if cvars
        username = cvars.String( SERVER and "hostname" or "name", username )
    else
        username = "unknown user"

    gpm.UserName = username

    splashes = {
        "I know you, " .. username .. "..."
        "Flying over rooftops..."
        "We need more packages!"
        "Where's fireworks!?"
        "Now on Yuescript!"
        "I'm watching you."
        "Faster than ever."
        "v" .. gpm.VERSION
        "Blazing fast ☄"
        "Here For You ♪"
        "Hello World!"
        "Once Again ♪"
        "Sandblast ♪"
        "That's me!"
        "I see you."
    }

    count = #splashes + 1
    splashes[ count ] = "Wow, here more " .. ( count - 1 ) .. " splashes!"

    splash = splashes[ math.random( 1, count ) ]
    for i = 1, ( 25 - #splash ) / 2
        if i % 2 == 1
            splash ..= " "
        splash = " " .. splash

    print( string.format( "\n                                     ___          __            \n                                   /'___`\\      /'__`\\          \n     __    _____     ___ ___      /\\_\\ /\\ \\    /\\ \\/\\ \\         \n   /'_ `\\ /\\ '__`\\ /' __` __`\\    \\/_/// /__   \\ \\ \\ \\ \\        \n  /\\ \\L\\ \\\\ \\ \\L\\ \\/\\ \\/\\ \\/\\ \\      // /_\\ \\ __\\ \\ \\_\\ \\   \n  \\ \\____ \\\\ \\ ,__/\\ \\_\\ \\_\\ \\_\\    /\\______//\\_\\\\ \\____/   \n   \\/___L\\ \\\\ \\ \\/  \\/_/\\/_/\\/_/    \\/_____/ \\/_/ \\/___/    \n     /\\____/ \\ \\_\\                                          \n     \\_/__/   \\/_/                %s                        \n\n  GitHub: https://github.com/Pika-Software\n  Discord: https://discord.gg/Gzak99XGvv\n  Website: https://pika-soft.ru\n  Developers: Pika Software\n  License: MIT\n", splash ) )

if cvars
    gpm.Developer = cvars.Number( "developer", 0 )

    cvars.AddChangeCallback( "developer", ( _, __, value ) ->
        gpm.Developer = tonumber( value ) or 0
    "gLua Package Manager" )

include( "gpm/util.lua" )
logger = gpm.Logger

if SERVER

    import AddCSLuaFolder from gpm.util
    AddCSLuaFile = AddCSLuaFile

    AddCSLuaFolder( "gpm/sources" )
    AddCSLuaFolder( "gpm/libs" )

    clientSideFiles = {
        "moonloader.lua"
        "filesystem.lua"
        "sources.lua"
        "package.lua"
        "loader.lua"
        "init.lua"
        "http.lua"
        "util.lua"
    }

    for index = 1, #clientSideFiles
        AddCSLuaFile( "gpm/" .. clientSideFiles[ index ] )

-- 3rd-party libraries
gpm.url = include( "libs/3rd-party/url.lua" )
gpm.ip = include( "libs/3rd-party/ip.lua" )

-- LibDeflate
deflate = include( "libs/3rd-party/deflate.lua" )
logger\Loaded( "LibDeflate v%s", deflate._VERSION )
gpm.deflate = deflate

-- gm_error
for key, value in pairs( include( "libs/error.lua" ) )
    gpm[ key ] = value

class gpm.NotImplementedError extends gpm.Error

-- gm_promise
promise = include( "libs/promise.lua" )
logger\Loaded( "gm_promise v%s", promise.VERSION )
gpm.Promise = promise

-- URL & URLSearchParams
include( "libs/url.lua" )
logger\Loaded( "URL v%s", gpm.URL.VERSION )

-- gm_moonloader & metaworks
include( "libs/metaworks.lua" )
include( "moonloader.lua" )

-- filesystem & http
include( "filesystem.lua" )
include( "http.lua" )

-- GMAD
gpm.addon = include( "libs/addon.lua" )

-- Packages
include( "package.lua" )
include( "sources.lua" )
include( "loader.lua" )

-- Sources
for fileName in *file.Find( "gpm/sources/*.lua", "LUA" )
    include( "sources/" .. fileName )

if SERVER
    include( "test.lua" )

logger\Info( "Start-up time: %.4f sec.", SysTime! - gpm.StartTime )
return gpm
