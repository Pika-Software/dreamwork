SERVER = SERVER
if SERVER
    AddCSLuaFile!

unless istable( gpm )
    global gpm = { VERSION: "2.0.0" }

gpm = gpm
gpm.StartTime = SysTime!

do

    username = "unknown"
    if cvars.String
        username = cvars.String( SERVER and "hostname" or "name", username )
    gpm.UserName = username

    splash = {
        "I know you, " .. username .. "..."
        "Flying over rooftops..."
        "We need more packages!"
        "Where's fireworks!?"
        "Now on Yuescript!"
        "I'm watching you."
        "Faster than ever."
        "v" .. gpm.VERSION
        "Blazing fast ☄"
        "Here For You ♪"
        "Hello World!"
        "Once Again ♪"
        "Sandblast ♪"
        "That's me!"
        "I see you."
    }

    splash[] = "Wow, here more " .. #splash .. " splashes!"
    splash = splash[ math.random( 1, #splash ) ]
    for i = 1, ( 25 - #splash ) / 2
        if i % 2 == 1
            splash ..= " "
        splash = " " .. splash

    print( string.format( "\n                                     ___          __            \n                                   /'___`\\      /'__`\\          \n     __    _____     ___ ___      /\\_\\ /\\ \\    /\\ \\/\\ \\         \n   /'_ `\\ /\\ '__`\\ /' __` __`\\    \\/_/// /__   \\ \\ \\ \\ \\        \n  /\\ \\L\\ \\\\ \\ \\L\\ \\/\\ \\/\\ \\/\\ \\      // /_\\ \\ __\\ \\ \\_\\ \\   \n  \\ \\____ \\\\ \\ ,__/\\ \\_\\ \\_\\ \\_\\    /\\______//\\_\\\\ \\____/   \n   \\/___L\\ \\\\ \\ \\/  \\/_/\\/_/\\/_/    \\/_____/ \\/_/ \\/___/    \n     /\\____/ \\ \\_\\                                          \n     \\_/__/   \\/_/                %s                        \n\n  GitHub: https://github.com/Pika-Software\n  Discord: https://discord.gg/Gzak99XGvv\n  Website: https://pika-soft.ru\n  Developers: Pika Software\n  License: MIT\n", splash ) )

unless CLIENT and gpm.Developer
    gpm.Developer = cvars.Number( "developer", 0 )
    cvars.AddChangeCallback( "developer", ( _, __, new ) ->
        gpm.Developer = tonumber( new ) or 0
    "gLua Package Manager" )

IncludeShared = ( filePath ) ->
    if SERVER
        AddCSLuaFile( filePath )
    return include( filePath )

IncludeShared( "gpm/util.lua" )
logger = gpm.Logger

gpm.URL = IncludeShared( "gpm/libs/url.lua" )
gpm.url = IncludeShared( "gpm/libs/3rd-party/url.lua" )

IncludeShared( "gpm/moonloader.lua" )
logger\Info( "metaworks v%s initialized.", IncludeShared( "libs/metaworks.lua" ).VERSION )

import Error, TypeError, RuntimeError from IncludeShared( "gpm/libs/error.lua" )
gpm.Error, gpm.TypeError, gpm.RuntimeError = Error, TypeError, RuntimeError
class gpm.NotImplementedError extends Error
logger\Info( "gm_error initialized." )

Promise = IncludeShared( "gpm/libs/promise.lua" )
gpm.Promise = Promise
logger\Info( "gm_promise v%s initialized.", Promise.VERSION )

logger\Info( "LibDeflate v%s initialized.", IncludeShared( "gpm/libs/3rd-party/deflate.lua" )._VERSION )
IncludeShared( "gpm/filesystem.lua" )
IncludeShared( "gpm/http.lua" )

GMAD = IncludeShared( "gpm/libs/gmad.lua" )
gpm.GMAD = GMAD
logger\Info( "%s%d v%s initialized.", GMAD.Identity, GMAD.FormatVersion, GMAD.VERSION )

IncludeShared( "gpm/package.lua" )
IncludeShared( "gpm/sources.lua" )
IncludeShared( "gpm/loader.lua" )

for f in *file.Find( "gpm/sources/*.lua", "LUA" )
    IncludeShared( "gpm/sources/#{f}" )

if SERVER
    include( "gpm/test.lua" )

logger\Info( "Start-up time: %.4f sec.", SysTime! - gpm.StartTime )
return gpm
