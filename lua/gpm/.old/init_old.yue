-- environment.path = include( "gpm/libs/path.lua" )

-- -- gm_error
-- for key, value in _G.pairs( include( "gpm/libs/error.lua" ) )
--     environment[ key ] = value

-- environment.struct = include( "gpm/libs/struct.lua" )
-- include( "gpm/libs/3rd-party/bigint.lua" )

-- -- LibDeflate
-- deflate = include( "gpm/libs/3rd-party/deflate.lua" )
-- Logger\Info( "LibDeflate v%s loaded.", deflate._VERSION )
-- environment.deflate = deflate

-- -- task system (async, await, Futures)
-- include( "gpm/libs/futures.lua" )

-- -- gm_url
-- do

--     url = include( "gpm/libs/url.lua" )

--     environment.IsURLSearchParams = url.IsURLSearchParams
--     environment.URLSearchParams = url.URLSearchParams

--     environment.isurl = url.IsURL
--     environment.URL = url.URL

--     import http from environment

--     http.EncodeURIComponent = url.encodeURIComponent
--     http.DecodeURIComponent = url.decodeURIComponent
--     http.EncodeURI = url.encodeURI
--     http.DecodeURI = url.decodeURI

-- include( "gpm/post-util.lua" )
-- include( "gpm/sql.lua" )

-- gpm.sql.migrate( "initial file table" )

-- include( "gpm/libs/file.lua" )
-- include( "gpm/libs/http.lua" )
-- include( "gpm/libs/net.lua" )

-- -- Github API
-- environment.github = include( "gpm/libs/github.lua" )

-- -- Lua Transport
-- include( "gpm/transport.lua" )

-- -- Plugins
-- for fileName in *Find( "gpm/plugins/*.lua", "LUA" )
--     include( "gpm/plugins/" .. fileName )

-- -- Package Manager
-- include( "gpm/repositories.lua" )
-- include( "gpm/loader.lua" )

-- if SERVER
--     include( "gpm/cli.lua" )

-- -- Code Sources
-- for fileName in *Find( "gpm/sources/*.lua", "LUA" )
--     include( "gpm/sources/" .. fileName )

-- -- our little sandbox ( TODO: remove on release )
-- if SERVER
--     include( "gpm/test.lua" )

-- environment.futures.run( gpm.loader.Startup! )

-- Logger\Info( "Start-up time: %.4f sec.", SysTime! - gpm.StartTime )

return gpm
