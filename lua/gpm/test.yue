-- import Error, debug, async, await from gpm
import format from string
import SysTime from _G

iter = 100000
warmup = math.min( iter / 100, 100 )
bench = (name, fn) ->
    -- Warmup
    for i = 1, warmup
        fn!

    collectgarbage "stop"
    st = SysTime!

    for i = 1, iter
        fn!

    st = SysTime! - st
    collectgarbage "restart"
    print format( "%d iterations of %s, took %f sec.", iter, name, st )
    return st

-- import URL from gpm
-- import FindSource from gpm.loader
-- main = async ->
--     -- PrintTable await gpm.github.request("get", "/repos/Pika-Software/units")
--     -- await gpm.Import( "package_v2" )
--     -- resolved = URL( "github://Pika-Software/units" ) -- vfs github/Pika-Software/units/package.lua
--     -- source = FindSource( resolved.scheme )

--     -- info = await source\FetchInfo( resolved )
--     -- result = await source\Install( resolved, info )

--     -- PrintTable( result )
--     -- print( result )

--     -- return source\Install( resolved, info, base, env, parent )

--     -- gpm.Import( "dll://asyncio" )
--     -- PrintTable gpm.Import( "file:/addons/NikNaks-main.zip")
--     -- gpm.Import( "file:/lua/packages/b/init" )

-- gpm.futures.run main()
