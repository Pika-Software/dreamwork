import Promise, Error, debug from gpm
import async, await from Promise
import format from string
SysTime = SysTime

iter = 10000
warmup = math.min( iter / 100, 100 )
bench = (name, fn) ->
    -- Warmup
    for i = 1, warmup
        fn!

    collectgarbage "stop"
    st = SysTime!

    for i = 1, iter
        fn!

    st = SysTime! - st
    collectgarbage "restart"
    print format( "%d iterations of %s, took %f sec.", iter, name, st )
    return st

import URL from gpm
import FindSource from gpm.loader
main = async ->
    -- await gpm.Import( "package_v2" )
    -- resolved = URL( "github://Pika-Software/units" ) -- vfs github/Pika-Software/units/package.lua
    -- source = FindSource( resolved.scheme )

    -- info = await source\FetchInfo( resolved )
    -- result = await source\Install( resolved, info )

    -- PrintTable( result )
    -- print( result )

    -- return source\Install( resolved, info, base, env, parent )

    -- gpm.Import( "dll://asyncio" )
    -- PrintTable gpm.Import( "file:/addons/NikNaks-main.zip")
    -- gpm.Import( "file:/lua/packages/b/init" )

main!\Catch (err)->
    try Error.display err
    catch err
        ErrorNoHaltWithStack err
        return
    return
