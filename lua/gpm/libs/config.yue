import environment from _G.gpm
import argument from environment
import Create, Remove from environment.timer
import GetValue, SetValue from environment.table
import serialize, deserialize from environment.yaml
import IsFile, AsyncWrite, Read, Write from environment.file

environment.Config = environment.class( "Config", {
    new: ( name, defaults ) =>
        argument( name, 1, "string" )
        @name = name

        filePath = "/data/config/" .. name .. ".txt"
        @timer = "GPM::Config - " .. name
        @filepath = filePath

        if IsFile( filePath )
            @data = deserialize( Read( filePath ) )
        elseif defaults
            argument( defaults, 2, "table" )
            Write( filePath, serialize( defaults ) )
            @data = defaults
        else
            @data = {}

        return nil

    GetAll: =>
        return @data

    Get: ( key ) =>
        return GetValue( @data, key )

    Set: ( key, value ) =>
        argument( key, 1, "string" )
        SetValue( @data, key, value )
        Create @timer, 1, 1, ->
            @Write!

        return nil

    Write: =>
        AsyncWrite( @filepath, serialize( @data ) )
        Remove( @timer )
        return nil

    Read: =>
        @data = deserialize( Read( @filepath ) )
        return nil

} )
